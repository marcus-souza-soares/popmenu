openapi: 3.1.3
info:
  title: PopMenu Challenge API
  description: |
    Restaurant Menu Management System API
    
    ## Features
    - **Multi-Restaurant Management**: Full CRUD operations for restaurants
    - **Smart Menu System**: Create and manage multiple menus per restaurant
    - **Intelligent Menu Item Reusability**: Menu items are globally unique and can be shared across menus
    
    ## Key Concepts
    - **Nested Resources**: APIs follow RESTful nested resource pattern
    - **Item Reusability**: Adding an item with an existing name automatically reuses the existing item
    - **No Duplication**: Menu items are unique by name across the entire system
    - **JSON Format**: All endpoints require the `.json` extension for JSON responses
    - **Api V1**: In the future, we will have multiple versions of the API, so we will use the `v1` prefix for the endpoints.
    
  version: 1.0.0
  contact:
    name: Marcus Souza Soares
    url: https://github.com/marcus-souza-soares

servers:
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Restaurants
    description: Restaurant management operations
  - name: Menus
    description: Menu management operations (nested under restaurants)
  - name: Menu Items
    description: Menu item management operations (nested under menus)

paths:
  /restaurants.json:
    get:
      summary: List all restaurants
      description: Retrieve a list of all restaurants with their associated menus
      operationId: listRestaurants
      tags:
        - Restaurants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
    post:
      summary: Create a restaurant
      description: Create a new restaurant
      operationId: createRestaurant
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantInput'
      responses:
        '201':
          description: Restaurant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{id}.json:
    parameters:
        - name: id
          in: path
          description: Restaurant ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
    get:
      summary: Get a restaurant
      description: Retrieve a specific restaurant by ID with its menus
      operationId: getRestaurant
      tags:
        - Restaurants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a restaurant
      description: Update an existing restaurant
      operationId: updateRestaurant
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantInput'
      responses:
        '200':
          description: Restaurant updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Partially update a restaurant
      description: Partially update an existing restaurant
      operationId: patchRestaurant
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantInput'
      responses:
        '200':
          description: Restaurant updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a restaurant
      description: Delete an existing restaurant and all its menus
      operationId: deleteRestaurant
      tags:
        - Restaurants
      responses:
        '204':
          description: Restaurant deleted successfully
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - could not delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{restaurant_id}/menus.json:
    parameters:
      - name: restaurant_id
        in: path
        description: Restaurant ID
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    get:
      summary: List menus for a restaurant
      description: Retrieve all menus for a specific restaurant
      operationId: listMenus
      tags:
        - Menus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a menu
      description: Create a new menu for a restaurant
      operationId: createMenu
      tags:
        - Menus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuInput'
      responses:
        '201':
          description: Menu created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{restaurant_id}/menus/{id}.json:
    parameters:
      - name: restaurant_id
        in: path
        description: Restaurant ID
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      - name: id
        in: path
        required: true
        description: The unique identifier of the menu
        schema:
          type: integer
          format: int64
          example: 1
    get:
      summary: Get a menu
      description: Retrieve a specific menu with its menu items
      operationId: getMenu
      tags:
        - Menus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a menu
      description: Update an existing menu
      operationId: updateMenu
      tags:
        - Menus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuInput'
      responses:
        '200':
          description: Menu updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Partially update a menu
      description: Partially update an existing menu
      operationId: patchMenu
      tags:
        - Menus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuInput'
      responses:
        '200':
          description: Menu updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a menu
      description: Delete an existing menu and remove all menu item associations
      operationId: deleteMenu
      tags:
        - Menus
      responses:
        '204':
          description: Menu deleted successfully
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - could not delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{restaurant_id}/menus/{menu_id}/menu_items.json:
    parameters:
      - name: restaurant_id
        in: path
        description: Restaurant ID
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      - name: menu_id
        in: path
        required: true
        description: Menu ID
        schema:
          type: integer
          format: int64
          example: 1
    get:
      summary: List menu items for a menu
      description: Retrieve all menu items for a specific menu
      operationId: listMenuItems
      tags:
        - Menu Items
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a menu item to a menu
      description: |
        Create or add a menu item to a menu. If a menu item with the same name already exists, 
        it will be reused and associated with this menu. Price can be updated if provided.
      operationId: createMenuItem
      tags:
        - Menu Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemInput'
      responses:
        '201':
          description: Menu item added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '404':
          description: Restaurant or menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{restaurant_id}/menus/{menu_id}/menu_items/{id}.json:
    parameters:
      - name: restaurant_id
        in: path
        description: Restaurant ID
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      - name: menu_id
        in: path
        required: true
        description: Menu ID
        schema:
          type: integer
          format: int64
          example: 1
      - name: id
        in: path
        required: true
        description: The unique identifier of the menu item
        schema:
          type: integer
          format: int64
          example: 1
    get:
      summary: Get a menu item
      description: Retrieve a specific menu item from a menu
      operationId: getMenuItem
      tags:
        - Menu Items
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '404':
          description: Restaurant, menu, or menu item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove a menu item from a menu
      description: |
        Remove a menu item from a specific menu. This only removes the association between 
        the menu and the menu item; it does not delete the menu item itself.
      operationId: removeMenuItem
      tags:
        - Menu Items
      responses:
        '204':
          description: Menu item removed from menu successfully
        '404':
          description: Restaurant, menu, or menu item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity - could not remove
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the restaurant
          example: 1
        name:
          type: string
          description: Name of the restaurant
          example: "Joe's Pizza"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the restaurant was created
          example: "2024-10-20T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the restaurant was last updated
          example: "2024-10-20T12:00:00Z"
        url:
          type: string
          format: uri
          description: URL to access this restaurant resource
          example: "http://localhost:3000/restaurants/1.json"
        menus:
          type: array
          description: List of menus associated with this restaurant
          items:
            $ref: '#/components/schemas/MenuSummary'
      required:
        - id
        - name
        - created_at
        - updated_at
        - url

    RestaurantInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the restaurant
          example: "Joe's Pizza"
          minLength: 1
      required:
        - name

    Menu:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the menu
          example: 1
        name:
          type: string
          description: Name of the menu
          example: "Lunch Menu"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the menu was created
          example: "2024-10-20T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the menu was last updated
          example: "2024-10-20T12:00:00Z"
        url:
          type: string
          format: uri
          description: URL to access this menu resource
          example: "http://localhost:3000/restaurants/1/menus/1.json"
        menu_items:
          type: array
          description: List of menu items on this menu
          items:
            $ref: '#/components/schemas/MenuItemSummary'
      required:
        - id
        - name
        - created_at
        - updated_at
        - url

    MenuInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the menu
          example: "Lunch Menu"
          minLength: 1
      required:
        - name

    MenuSummary:
      type: object
      description: Abbreviated menu information for nested responses
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the menu
          example: 1
        name:
          type: string
          description: Name of the menu
          example: "Lunch Menu"
        url:
          type: string
          format: uri
          description: URL to access this menu resource
          example: "http://localhost:3000/restaurants/1/menus/1.json"
      required:
        - id
        - name
        - url

    MenuItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the menu item
          example: 1
        name:
          type: string
          description: Name of the menu item
          example: "Margherita Pizza"
        price_in_cents:
          type: integer
          description: Price of the menu item in cents
          example: 1299
          minimum: 1
        created_at:
          type: string
          format: date-time
          description: Timestamp when the menu item was created
          example: "2024-10-20T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the menu item was last updated
          example: "2024-10-20T12:00:00Z"
      required:
        - id
        - name
        - price_in_cents
        - created_at
        - updated_at

    MenuItemInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the menu item
          example: "Margherita Pizza"
          minLength: 1
        price_in_cents:
          type: integer
          description: Price of the menu item in cents
          example: 1299
          minimum: 1
      required:
        - name
        - price_in_cents

    MenuItemSummary:
      type: object
      description: Abbreviated menu item information for nested responses
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the menu item
          example: 1
        name:
          type: string
          description: Name of the menu item
          example: "Margherita Pizza"
        price_in_cents:
          type: integer
          description: Price of the menu item in cents
          example: 1299
        url:
          type: string
          format: uri
          description: URL to access this menu item resource
          example: "http://localhost:3000/restaurants/1/menus/1/menu_items/1.json"
      required:
        - id
        - name
        - price_in_cents
        - url

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Restaurant not found"
        errors:
          type: object
          description: Validation errors (for 422 responses)
          additionalProperties:
            type: array
            items:
              type: string
          example:
            name: ["can't be blank"]
